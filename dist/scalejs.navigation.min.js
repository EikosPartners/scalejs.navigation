define("scalejs.navigation",["scalejs!core","knockout","crossroads","hasher"],function(a,b,c,d){"use strict";function e(a){for(var b={},c=a.substr(1).split("&"),d=0;d<c.length;d+=1){var e=c[d].split("=");b[decodeURIComponent(e[0])]=decodeURIComponent(e[1]||"");try{b[decodeURIComponent(e[0])]=JSON.parse(b[decodeURIComponent(e[0])])}catch(f){}}return Object.keys(b).forEach(function(a){"true"===b[a]?b[a]=!0:"false"===b[a]?b[a]=!1:"string"==typeof b[a]&&-1!==b[a].indexOf(",")&&(b[a]=b[a].split(","))}),b}function f(a,b,d,f){var g,h,i,j,k,l=[];return"function"==typeof b?i=b:(g=b,j=g.split("/")[0],i=function(){c.parse(j)},k=function(a){if("string"==typeof a){var b=a.split("?");a=b.length>1?{route:j,path:b[0],query:e("?"+b[1])}:{route:j,path:b[0]||""}}else a=a?{route:j,path:"",query:a}:{route:j,path:""};"/"===a.path[a.path.length-1]&&(a.path=a.path.slice(0,a.path.length-1)),o=a,t&&(d(a),q(h))},l.push(c.addRoute(g,k)),g!==j&&l.push(c.addRoute(j,k))),h={navText:a,navigate:function(){q(h),i()},routes:l,canNav:f||function(){return!0}},p.push(h),r[a]=h,h}function g(a){r[a]&&(p.remove(r[a]),r[a].routes.forEach(function(a){c.removeRoute(a)}),delete r[a])}function h(a){q()!==r[a]&&q(r[a])}function i(){0===p().length||q()||p()[0].navigate()}function j(a,b){c.parse(a)}function k(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(encodeURIComponent(c)+"="+encodeURIComponent("string"==typeof a[c]?a[c]:JSON.stringify(a[c])));return b.join("&")}function l(a,b,c,e){var f=o.route+(o.path?"/"+o.path:"");return f===a&&JSON.stringify(o.query||{})===JSON.stringify(b)?void console.warn("Trying to set the same route; will be disregarded"):(c===!1&&(t=!1),b&&(a+="/?"+k(b)),e===!1?d.replaceHash(a):d.setHash(a),void(t=!0))}function m(){var a=o.route+(o.path?"/"+o.path:"");o.query&&(a+="/?"+k(o.query)),c.resetState(),c.parse(a)}function n(){return o}var o,p=b.observableArray(),q=b.observable(),r={},s=s,t=!0;return s={navLinks:p,activeLink:q,navigate:h,addNav:f,removeNav:g,init:i,setRoute:l,getCurrent:n,reRoute:m},a.registerExtension({navigation:s,layout:{content:b.observable()}}),c.routed.add(function(a,b){d.setHash(a)}),d.initialized.add(j),d.changed.add(j),a.onApplicationEvent(function(a){"started"===a&&setTimeout(function(){d.init(),s.init()})}),s});